<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MailAppVersionOverrides" elementFormDefault="qualified" version="1.0"
    targetNamespace="http://schemas.microsoft.com/office/mailappversionoverrides"
    xmlns="http://schemas.microsoft.com/office/mailappversionoverrides"
    xmlns:bt="http://schemas.microsoft.com/office/officeappbasictypes/1.0"
    xmlns:mailor1_1="http://schemas.microsoft.com/office/mailappversionoverrides/1.1"
    xmlns:odoc="http://schemas.microsoft.com/internal/obd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import schemaLocation="OfficeAppBasicTypesV1_0.xsd" namespace="http://schemas.microsoft.com/office/officeappbasictypes/1.0" />
  <xs:import schemaLocation="MailAppVersionOverridesV1_1.xsd" namespace="http://schemas.microsoft.com/office/mailappversionoverrides/1.1" />
  
  <xs:simpleType name="EventFunctionExecutionType">
    <xs:annotation>
      <xs:documentation>Defines acceptable values for the FunctionExecution attribute for event extension points.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="synchronous">
        <xs:annotation>
          <xs:documentation>
            This setting will block the user action that raised the event and execute the function. Developer's code can decide whether the user action should proceed or be cancelled.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="asynchronous">
        <xs:annotation>
          <xs:documentation>
            This setting will not block the action that raised the event and the function will be executed asynchronously.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Event">
    <xs:annotation>
      <xs:documentation>
        Specifies an event for which the app wishes to receive callbacks.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="Type" type="bt:ShortString" use="required">
      <xs:annotation>
        <xs:documentation>
          Specifies the event type to register a callback for. The event type MessageSend is not valid for Office Marketplace apps, but can be used in apps provided through alternate app catalogs such as an administrator managed Exchange App Catalog.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FunctionExecution" type="EventFunctionExecutionType" use="required" />
    <xs:attribute name="FunctionName" type="bt:LongString" use="required" />
  </xs:complexType>

  <xs:complexType name="ShowTaskpane">
    <xs:annotation>
      <xs:documentation>
        Specifies a taskpane extension URL to display when a user interface extension point is invoked by the user.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Action">
        <xs:sequence>
          <xs:element name="SourceLocation" type="bt:URLResourceReference" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ExecuteFunction">
    <xs:annotation>
      <xs:documentation>
        Specifies a callback to execute when a user interface extension point is invoked by the user.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Action">
        <xs:sequence>
          <xs:element name="FunctionName" type="bt:LongString" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Action" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies an action to perform when a user interface extension point is invoked by the user.
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>

  <xs:complexType name="Supertip">
    <xs:annotation>
      <xs:documentation>
        Specifies the super tip for this control.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Title" type="bt:ShortResourceReference" minOccurs="1" maxOccurs="1" />
      <xs:element name="Description" type="bt:LongResourceReference" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType>

  <!-- Custom pane rules definition -->
  <xs:complexType name="Rule" abstract="true">
    <xs:annotation>
      <xs:documentation>
        An abstract type that specifies the conditions for the host application to activate this mail app.
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>

  <xs:complexType name="ItemIs">
    <xs:annotation>
      <xs:documentation>
        Defines a rule that evaluates to true if the selected item is of the specified type.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:attribute name="ItemType" type="bt:NonEmptyString" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the item type to match. Currently supported values are: "Message" and "AppointmentAttendee".</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ItemClass" type="bt:NonEmptyString" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies the item message class to match.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="IncludeSubClasses" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies whether the rule should evaluate to true if the item is of a subclass of the specified message class; the default is false.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ItemHasKnownEntity">
    <xs:annotation>
      <xs:documentation>
        Defines a rule that evaluates to true if the item contains text of the specified entity type in its subject or body.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:attribute name="EntityType" type="bt:ShortString" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the type of entity that must be found for the rule to evaluate to true. Currently supported values are: "MeetingSuggestion", "TaskSuggestion", "Address", "Url", "PhoneNumber", "EmailAddress", and "Contact"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RegExFilter" type="bt:NonEmptyString" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies a regular expression to run against this entity for activation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="FilterName" type="bt:NonEmptyString" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies the name of the regular expression filter, so that it is subsequently possible to refer to it by code.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="IgnoreCase" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>
              Specifies to ignore case when running the regular expression specified by the "RegExFilter" attribute.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="PropertyName">
    <xs:annotation>
      <xs:documentation>
        Defines property names that can be used with the "ItemHasRegularExpressionMatch" rule.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Subject">
        <xs:annotation>
          <xs:documentation>
            Evaluates the regular expression against the item subject.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BodyAsPlaintext">
        <xs:annotation>
          <xs:documentation>
            Evaluates the regular expression against the item body in plain text.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BodyAsHTML">
        <xs:annotation>
          <xs:documentation>
            Evaluates the regular expression against the item body if the body is available in HTML.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SenderSMTPAddress">
        <xs:annotation>
          <xs:documentation>
            Evaluates the regular expression against the SMTP address of the item sender.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ItemHasRegularExpressionMatch">
    <xs:annotation>
      <xs:documentation>
        Defines a rule that evaluates to true if a match for the specified regular expression can be found in the specified property of the item.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:attribute name="RegExName" type="bt:NonEmptyString" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the name of the regular expression, so that it is subsequently possible to refer to it by code.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RegExValue" type="bt:NonEmptyString" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the regular expression to match.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="PropertyName" type="PropertyName" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the name of the property in which to look for matches.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="IgnoreCase" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies to ignore the case when executing the regular expression.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ItemHasAttachment">
    <xs:annotation>
      <xs:documentation>
        Defines a rule that evaluates to true if the item contains an attachment.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Rule">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="LogicalOperator">
    <xs:annotation>
      <xs:documentation>
        Defines logical operators that allow combining multiple rules into a rule collection.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="And">
        <xs:annotation>
          <xs:documentation>
            The binary logical operator that returns true if both operands are true, and returns false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Or">
        <xs:annotation>
          <xs:documentation>
            The binary logical operator that returns true if one or both operands are true, and returns false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="RuleCollection">
    <xs:annotation>
      <xs:documentation>
        Defines a collection of rules and the logical operator to use when evaluating them.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:sequence>
          <xs:element name="Rule" type="Rule" minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>Specifies the list of rules that this collection contains.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="Mode" type="LogicalOperator" use="required">
          <xs:annotation>
            <xs:documentation>Specifies the logical operator to use when evaluating this rule collection.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!-- End custom pane rules definition -->

  <!-- Controls -->
  <xs:complexType name="UIControl" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point of various kinds.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Label" type="bt:ShortResourceReference" minOccurs="1" maxOccurs="1" />
      <xs:element name="Tooltip" type="bt:ShortResourceReference" minOccurs="0" maxOccurs="1" odoc:omit="true"/>
      <xs:element name="Supertip" type="Supertip" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute name="id" type="bt:ShortString" use="required">
      <xs:annotation>
        <xs:documentation>
          The unique identifier of this control within the form factor.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="UIControlWithIcon" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point of various kinds that contain an icon.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="UIControl">
        <xs:sequence>
          <xs:element name="Icon" type="bt:IconList" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="UIControlWithOptionalIcon" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point of various kinds that may or may not contain an icon.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="UIControl">
        <xs:sequence>
          <xs:element name="Icon" type="bt:IconList" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Button">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point that displays as a standard button.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="UIControlWithIcon">
        <xs:sequence>
          <xs:element name="Action" type="Action" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MenuItem">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point that displays as an item in a menu control.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="UIControlWithOptionalIcon">
        <xs:sequence>
          <xs:element name="Action" type="Action" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MenuItems">
    <xs:annotation>
      <xs:documentation>
        Specifies a list of menu actions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Item" type="MenuItem" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Menu">
    <xs:annotation>
      <xs:documentation>
        Specifies a user interface extension point that displays as a menu of actions.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="UIControlWithIcon">
        <xs:sequence>
          <xs:element name="Items" type="MenuItems" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!-- End controls -->

  <!-- Ribbon -->
  <xs:complexType name="Group">
    <xs:annotation>
      <xs:documentation>
        Specifies a specific group of user interface extension points in a tab in the host.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Label" type="bt:ShortResourceReference" minOccurs="1" maxOccurs="1" />
      <xs:element name="Tooltip" type="bt:ShortResourceReference" minOccurs="0" maxOccurs="1" odoc:omit="true"/>
      <xs:element name="Control" type="UIControl" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="bt:ShortString" use="required">
      <xs:annotation>
        <xs:documentation>
          The unique identifier of this group within the form factor.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Tab" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies a specific tab in the host where an app will customize the user interface.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Group" type="Group" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="bt:ShortString" use="required">
      <xs:annotation>
        <xs:documentation>
          Specifies the identifier of the tab to which the child groups belong. If this tab is a CustomTab element, it is the identifier of the new tab. If it is an OfficeTab, it is the identifier of the preexisting Office UI tab in which to insert content.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="OfficeTab">
    <xs:annotation>
      <xs:documentation>
        Specifies an extension to a pre-existing tab in the host where an app will customize the user interface. Currently supported Tab id values for this element are "TabDefault".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Tab" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CustomTab">
    <xs:annotation>
      <xs:documentation>
        Specifies an app defined tab in the host where an app will customize the user interface.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Tab">
        <xs:sequence>
          <xs:element name="Label" type="bt:ShortResourceReference" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!-- End ribbon -->

  <!-- Extension points -->
  <xs:complexType name="ExtensionPoint" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies a location in a host where the app exposes functionality.
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>

  <xs:complexType name="CommandSurfaceExtensionPoint" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies locations in a host's user interface where the app exposes functionality.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ExtensionPoint">
        <xs:sequence>
          <xs:element name="OfficeTab" type="OfficeTab" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="CustomTab" type="CustomTab" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MessageReadCommandSurface">
    <xs:annotation>
      <xs:documentation>
        Specifies the ways the app exposes functionality through the user interface of a mail item's reading view.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="CommandSurfaceExtensionPoint" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MessageComposeCommandSurface">
    <xs:annotation>
      <xs:documentation>
        Specifies the ways the app exposes functionality through the user interface of a mail item's compose view.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="CommandSurfaceExtensionPoint" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AppointmentOrganizerCommandSurface">
    <xs:annotation>
      <xs:documentation>
        Specifies the ways the app exposes functionality through the user interface of an appointment item where the user is the organizer.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="CommandSurfaceExtensionPoint" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AppointmentAttendeeCommandSurface">
    <xs:annotation>
      <xs:documentation>
        Specifies the ways the app exposes functionality through the user interface of an appointment item where the user is an attendee.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="CommandSurfaceExtensionPoint" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CustomPane">
    <xs:annotation>
      <xs:documentation>
        Displays a tab in the app bar that can appear in message read or appointment attendee views via declaration of rules.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ExtensionPoint">
        <xs:sequence>
          <xs:element name="RequestedHeight" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Specifies the desired height, in pixels, of this mail app when running on a desktop computer, which is a value between 32 and 450.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="32" />
                <xs:maxInclusive value="450" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="SourceLocation" type="bt:URLResourceReference" minOccurs="1" maxOccurs="1" />
          <xs:element name="Rule" type="Rule" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Specifies the activation rule that should be evaluated for this extension point.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DisableEntityHighlighting" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Specifies whether entity highlighting should be turned off for this mail app.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!-- End extension points-->

  <!-- Hosts and form factors -->
  <xs:complexType name="FormFactor">
    <xs:annotation>
      <xs:documentation>
        Specifies the list of settings for the app when activated for a given form factor of the host.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FunctionFile" type="bt:URLResourceReference" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies the source code file for the app, containing operations it exposes via its extension points, to use when loaded in this form factor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ExtensionPoint" type="ExtensionPoint" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Specifies a location in the host where the app registers itself to perform operations.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Host" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Generic type for specifying Host node types under the Hosts element list
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>

  <xs:complexType name="MailHost">
    <xs:annotation>
      <xs:documentation>
        Defines a headless MailApp host details, its supported form factors, and settings for each.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Host">
        <xs:sequence>
          <xs:element name="DesktopFormFactor" type="FormFactor" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Specifies the settings of the app when running in a desktop version of the host.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Hosts">
    <xs:annotation>
      <xs:documentation>
        Specifies the Office client Host type where an app for Office will be activated.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Host" type="Host">
        <xs:annotation>
          <xs:documentation>
            Specifies the Office client applications where an app for Office will be activated and its settings.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- End hosts and form factors -->

  <xs:complexType name="VersionOverridesV1_0">
    <xs:annotation>
      <xs:documentation>
        Contains elements for the version 1.0 overrides of the MailApp office app manifest.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Description" type="bt:LongResourceReference" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies a more verbose description of the app. If present this value overrides the Description element in any parent portion of the manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Requirements" type="bt:Requirements" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies the minimum set of Office.js requirements that the app for Office needs to activate</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Hosts" type="Hosts" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies a collection of host types and their settings. Overrides the Hosts element in any parent portion of the manifest.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Resources" type="bt:Resources" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies a collection of resources referenced by other elements of the manifest where resource references are supported.</xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element ref="mailor1_1:VersionOverrides" minOccurs="0" maxOccurs="1">
      <xs:annotation>
        <xs:documentation>Contains elements that override or supplement elements defined in the top level manifest for hosts that support the additional functionality that this extended schema defines.</xs:documentation>
      </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="VersionOverrides" type="VersionOverridesV1_0">
    <xs:annotation>
      <xs:documentation>Specifies a collection of host types and their settings. Data defined in this element overrides the same data present in any parent portion of this manifest for hosts that support this extended manifest content.</xs:documentation>
    </xs:annotation>
  </xs:element>

</xs:schema>
